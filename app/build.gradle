apply plugin: 'com.android.application'

android {
    compileSdkVersion 17
    buildToolsVersion "21.1.2"


    def verName=rootProject.ext.versionName
    defaultConfig {
        applicationId "com.jingye.coffeemac"
        minSdkVersion 15
        targetSdkVersion 17
        versionCode rootProject.ext.versionCode

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

//      ndk {
//          moduleName "serial_port"
//      }
    }

    signingConfigs {
        release {
            storeFile file('coffeemackey.jks')
            storePassword 'hzjykj2015##'
            keyAlias 'coffeemac'
            keyPassword 'hzjykj2015##'
        }
    }

    productFlavors {
        AliOnline {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.ONLINE");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "true");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "false");
            buildConfigField("Boolean", " MAC_FOR_ABC", "false");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-AliOnline')

        }

        AliTest {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.TEST");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "true");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "false");
            buildConfigField("Boolean", " MAC_FOR_ABC", "false");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-AliTest')
        }

        NormalOnline {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.ONLINE");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "true");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "true");
            buildConfigField("Boolean", " MAC_FOR_ABC", "false");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-NormalOnline')
        }

        NormalTest {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.TEST");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "true");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "true");
            buildConfigField("Boolean", " MAC_FOR_ABC", "false");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-NormalTest')
        }

        AbcOnline {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.ONLINE");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "true");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "true");
            buildConfigField("Boolean", " MAC_FOR_ABC", "true");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-AbcOnline')
        }

        AbcTest {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.TEST");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "true");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "true");
            buildConfigField("Boolean", " MAC_FOR_ABC", "true");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-AbcTest')
        }

        SimulateTest {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.TEST");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "false");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "true");
            buildConfigField("Boolean", " MAC_FOR_ABC", "true");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-SimulateTest')
        }

        Local225 {
            buildConfigField("com.jingye.coffeemac.application.AppConfig.Build", "BUILD_SERVER", "com.jingye.coffeemac.application.AppConfig.Build.LOCAL");
            buildConfigField("Boolean", "SERIALPORT_SYSNC", "false");
            buildConfigField("Boolean", " MAC_FOR_ALI", "true");
            buildConfigField("Boolean", " MAC_FOR_WECHAT", "true");
            buildConfigField("Boolean", " MAC_FOR_ABC", "true");
            buildConfigField("String", " MACHINETYPE", "\"normal\"");
            setVersionName(verName+'-Local225')
        }


    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name.replace("app", "Coffee-Mac-"+verName)
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    buildTypes {
        release {

            minifyEnabled true
            zipAlignEnabled true
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    sourceSets.main {
        jniLibs.srcDirs = ['libs']
        jni.srcDirs = []
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    compile files('libs/fastjson-1.1.34.android.jar')
    compile files('libs/netty-3.5.10.Final.jar')
    compile files('libs/SonicWaveNFC_Android.jar')
    compile files('libs/zxing.jar')
    compile 'com.android.support:support-v4:+'
    compile 'com.android.support:recyclerview-v7:23.2.1'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2') {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test:runner:0.3') {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        // Necessary to avoid version conflicts
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test.espresso:espresso-intents:2.2') {
        // Necessary to avoid version conflicts
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    //junit4 project
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'

    compile files('libs/BaiduLBS_Android.jar')
    compile 'com.android.support.test.espresso:espresso-idling-resource:2.2'

    compile 'com.qiniu:qiniu-android-sdk:7.0.9'

}
